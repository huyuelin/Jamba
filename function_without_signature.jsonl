{"instance_id": "astropy__astropy-12907", "message": "Please look through the following GitHub problem description and Repository structure with function names of each file and provide a list of files that one would need to edit to fix the problem.\n\n### GitHub Problem Description ###\nModeling's `separability_matrix` does not compute separability correctly for nested CompoundModels\nConsider the following model:\r\n\r\n```python\r\nfrom astropy.modeling import models as m\r\nfrom astropy.modeling.separable import separability_matrix\r\n\r\ncm = m.Linear1D(10) & m.Linear1D(5)\r\n```\r\n\r\nIt's separability matrix as you might expect is a diagonal:\r\n\r\n```python\r\n>>> separability_matrix(cm)\r\narray([[ True, False],\r\n       [False,  True]])\r\n```\r\n\r\nIf I make the model more complex:\r\n```python\r\n>>> separability_matrix(m.Pix2Sky_TAN() & m.Linear1D(10) & m.Linear1D(5))\r\narray([[ True,  True, False, False],\r\n       [ True,  True, False, False],\r\n       [False, False,  True, False],\r\n       [False, False, False,  True]])\r\n```\r\n\r\nThe output matrix is again, as expected, the outputs and inputs to the linear models are separable and independent of each other.\r\n\r\nIf however, I nest these compound models:\r\n```python\r\n>>> separability_matrix(m.Pix2Sky_TAN() & cm)\r\narray([[ True,  True, False, False],\r\n       [ True,  True, False, False],\r\n       [False, False,  True,  True],\r\n       [False, False,  True,  True]])\r\n```\r\nSuddenly the inputs and outputs are no longer separable?\r\n\r\nThis feels like a bug to me, but I might be missing something?\n\n\n###\n\n### Repository Structure ###\nastropy/\n    setup.py\n    conftest.py\n      Functions:\n        ignore_matplotlibrc\n        fast_thread_switching\n        pytest_configure\n        pytest_unconfigure\n        pytest_terminal_summary\n    version.py\n      Functions:\n        split_version\n    __init__.py\n      Classes:\n        Conf\n        base_constants_version\n        physical_constants\n        astronomical_constants\n      Functions:\n        _is_astropy_source\n        _initialize_astropy\n        _get_bibtex\n        online_help\n    logger.py\n      Classes:\n        LoggingError\n        _AstLogIPYExc\n        Conf\n        AstropyLogger\n        StreamHandler\n        FilterOrigin\n        ListHandler\n      Functions:\n        _init_log\n        _teardown_log\n        ipy_exc_handler\n    convolution/\n        __init__.py\n        utils.py\n          Classes:\n            DiscretizationError\n            KernelSizeError\n          Functions:\n            has_even_axis\n            raise_even_kernel_exception\n            add_kernel_arrays_1D\n            add_kernel_arrays_2D\n            discretize_model\n            discretize_center_1D\n            discretize_center_2D\n            discretize_linear_1D\n            discretize_bilinear_2D\n            discretize_oversample_1D\n            discretize_oversample_2D\n            discretize_integrate_1D\n            discretize_integrate_2D\n        kernels.py\n          Classes:\n            Gaussian1DKernel\n            Gaussian2DKernel\n            Box1DKernel\n            Box2DKernel\n            Tophat2DKernel\n            Ring2DKernel\n            Trapezoid1DKernel\n            TrapezoidDisk2DKernel\n            RickerWavelet1DKernel\n            RickerWavelet2DKernel\n            AiryDisk2DKernel\n            Moffat2DKernel\n            Model1DKernel\n            Model2DKernel\n            PSFKernel\n            CustomKernel\n            MexicanHat1DKernel\n            MexicanHat2DKernel\n          Functions:\n            _round_up_to_odd_integer\n        setup_package.py\n          Functions:\n            get_extensions\n        convolve.py\n          Functions:\n            _next_fast_lengths\n            _copy_input_if_needed\n            convolve\n            convolve_fft\n            interpolate_replace_nans\n            convolve_models\n            convolve_models_fft\n        core.py\n          Classes:\n            Kernel\n            Kernel1D\n            Kernel2D\n          Functions:\n            kernel_arithmetics\n    cosmology/\n        realizations.py\n          Classes:\n            default_cosmology\n          Functions:\n            __getattr__\n            __dir__\n        units.py\n          Functions:\n            dimensionless_redshift\n            redshift_distance\n            redshift_hubble\n            redshift_temperature\n            with_redshift\n            with_H0\n            z_to_distance\n            distance_to_z\n            z_to_hubble\n            hubble_to_z\n            z_to_littleh\n            littleh_to_z\n            z_to_Tcmb\n            Tcmb_to_z\n        parameters.py\n          Functions:\n            __getattr__\n            __dir__\n        parameter.py\n          Classes:\n            Parameter\n          Functions:\n            _validate_with_unit\n            _validate_to_float\n            _validate_to_scalar\n            _validate_non_negative\n            register\n        __init__.py\n          Functions:\n            __getattr__\n            __dir__\n        utils.py\n          Functions:\n            vectorize_redshift_method\n            vectorize_if_needed\n            inf_like\n            aszarr\n            wrapper\n        funcs.py\n          Functions:\n            _z_at_scalar_value\n            z_at_value\n            f\n        flrw.py\n          Classes:\n            FLRW\n            FlatFLRWMixin\n            LambdaCDM\n            FlatLambdaCDM\n            wCDM\n            FlatwCDM\n            w0waCDM\n            Flatw0waCDM\n            wpwaCDM\n            w0wzCDM\n          Functions:\n            quad\n            ellipkinc\n            hyp2f1\n            phi_z\n            phi_z\n        connect.py\n          Classes:\n            CosmologyRead\n            CosmologyWrite\n            CosmologyFromFormat\n            CosmologyToFormat\n        core.py\n          Classes:\n            CosmologyError\n            Cosmology\n            FlatCosmologyMixin\n          Functions:\n            __getattr__\n        io/\n            model.py\n              Classes:\n                _CosmologyModel\n              Functions:\n                from_model\n                to_model\n                model_identify\n            cosmology.py\n              Functions:\n                from_cosmology\n                to_cosmology\n                cosmology_identify\n            __init__.py\n            utils.py\n              Functions:\n                convert_parameter_to_column\n                convert_parameter_to_model_parameter\n            mapping.py\n              Functions:\n                from_mapping\n                to_mapping\n                mapping_identify\n            table.py\n              Functions:\n                from_table\n                to_table\n                table_identify\n            row.py\n              Functions:\n                from_row\n                to_row\n                row_identify\n            ecsv.py\n              Functions:\n                read_ecsv\n                write_ecsv\n                ecsv_identify\n            yaml.py\n              Functions:\n                yaml_representer\n                yaml_constructor\n                register_cosmology_yaml\n                from_yaml\n                to_yaml\n                representer\n                constructor\n    time/\n        formats.py\n          Classes:\n            TimeFormat\n            TimeNumeric\n            TimeJD\n            TimeMJD\n            TimeDecimalYear\n            TimeFromEpoch\n            TimeUnix\n            TimeUnixTai\n            TimeCxcSec\n            TimeGPS\n            TimePlotDate\n            TimeStardate\n            TimeUnique\n            TimeAstropyTime\n            TimeDatetime\n            TimeYMDHMS\n            TimezoneInfo\n            TimeString\n            TimeISO\n            TimeISOT\n            TimeYearDayTime\n            TimeDatetime64\n            TimeFITS\n            TimeEpochDate\n            TimeBesselianEpoch\n            TimeJulianEpoch\n            TimeEpochDateString\n            TimeBesselianEpochString\n            TimeJulianEpochString\n            TimeDeltaFormat\n            TimeDeltaNumeric\n            TimeDeltaSec\n            TimeDeltaJD\n            TimeDeltaDatetime\n          Functions:\n            _regexify_subfmts\n            _validate_jd_for_storage\n            _broadcast_writeable\n            asarray_or_scalar\n            comma_repr\n        __init__.py\n          Classes:\n            Conf\n        utils.py\n          Functions:\n            day_frac\n            quantity_day_frac\n            two_sum\n            two_product\n            split\n            longdouble_to_twoval\n            decimal_to_twoval1\n            bytes_to_twoval1\n            twoval_to_longdouble\n            twoval_to_decimal1\n            twoval_to_string1\n            twoval_to_bytes1\n        setup_package.py\n          Functions:\n            get_extensions\n        core.py\n          Classes:\n            _LeapSecondsCheck\n            TimeInfo\n            TimeDeltaInfo\n            TimeBase\n            Time\n            TimeDeltaMissingUnitWarning\n            TimeDelta\n            ScaleValueError\n            OperandTypeError\n          Functions:\n            _make_array\n            _check_for_masked_and_fill\n            _check_leapsec\n            update_leap_seconds\n            get_as_filled_ndarray\n    nddata/\n        compat.py\n          Classes:\n            NDDataArray\n        nduncertainty.py\n          Classes:\n            IncompatibleUncertaintiesException\n            MissingDataAssociationException\n            NDUncertainty\n            UnknownUncertainty\n            _VariancePropagationMixin\n            StdDevUncertainty\n            VarianceUncertainty\n            InverseVariance\n          Functions:\n            _inverse\n        __init__.py\n          Classes:\n            Conf\n        nddata.py\n          Classes:\n            NDData\n        utils.py\n          Classes:\n            NoOverlapError\n            PartialOverlapError\n            Cutout2D\n          Functions:\n            overlap_slices\n            extract_array\n            add_array\n            subpixel_indices\n        ccddata.py\n          Classes:\n            CCDData\n          Functions:\n            _arithmetic\n            _uncertainty_unit_equivalent_to_parent\n            _generate_wcs_and_update_header\n            fits_ccddata_reader\n            fits_ccddata_writer\n            decorator\n            inner\n        nddata_withmixins.py\n          Classes:\n            NDDataRef\n        nddata_base.py\n          Classes:\n            NDDataBase\n        flag_collection.py\n          Classes:\n            FlagCollection\n        decorators.py\n          Functions:\n            support_nddata\n            support_nddata_decorator\n            wrapper\n        blocks.py\n          Functions:\n            _process_block_inputs\n            reshape_as_blocks\n            block_reduce\n            block_replicate\n        _testing.py\n          Functions:\n            assert_wcs_seem_equal\n            _create_wcs_simple\n            create_two_equal_wcs\n            create_two_unequal_wcs\n        bitmask.py\n          Classes:\n            InvalidBitFlag\n            BitFlag\n            BitFlagNameMeta\n            BitFlagNameMap\n          Functions:\n            _is_bit_flag\n            _is_int\n            extend_bit_flag_map\n            interpret_bit_flags\n            bitfield_to_boolean_mask\n        mixins/\n            ndslicing.py\n              Classes:\n                NDSlicingMixin\n            __init__.py\n            ndio.py\n              Classes:\n                NDDataRead\n                NDDataWrite\n                NDIOMixin\n            ndarithmetic.py\n              Classes:\n                NDArithmeticMixin\n    io/\n        __init__.py\n        fits/\n            diff.py\n              Classes:\n                _BaseDiff\n                FITSDiff\n                HDUDiff\n                HeaderDiff\n                ImageDataDiff\n                RawDataDiff\n                TableDataDiff\n              Functions:\n                report_diff_keyword_attr\n                get_header_values_comments\n            convenience.py\n              Functions:\n                getheader\n                getdata\n                getval\n                setval\n                delval\n                writeto\n                table_to_hdu\n                append\n                update\n                info\n                printdiff\n                tabledump\n                tableload\n                _getext\n                _makehdu\n                _stat_filename_or_fileobj\n                _get_file_mode\n            file.py\n              Classes:\n                _File\n              Functions:\n                _is_bz2file\n                _normalize_fits_mode\n            header.py\n              Classes:\n                Header\n                _DelayedHeader\n                _BasicHeaderCards\n                _BasicHeader\n                _CardAccessor\n                _HeaderComments\n                _HeaderCommentaryCards\n              Functions:\n                _block_size\n                _pad_length\n                _check_padding\n                update_from_dict\n                get_insertion_idx\n                block_iter\n            fitstime.py\n              Functions:\n                is_time_column_keyword\n                _verify_global_info\n                _verify_column_info\n                _get_info_if_time_column\n                _convert_global_time\n                _convert_time_key\n                _convert_time_column\n                fits_to_time\n                time_to_fits\n            __init__.py\n              Classes:\n                Conf\n            column.py\n              Classes:\n                Delayed\n                _BaseColumnFormat\n                _ColumnFormat\n                _AsciiColumnFormat\n                _FormatX\n                _FormatP\n                _FormatQ\n                ColumnAttribute\n                Column\n                ColDefs\n                _AsciiColDefs\n                _VLF\n              Functions:\n                _get_index\n                _unwrapx\n                _wrapx\n                _makep\n                _parse_tformat\n                _parse_ascii_tformat\n                _parse_tdim\n                _scalar_to_format\n                _cmp_recformats\n                _convert_fits2record\n                _convert_record2fits\n                _dtype_to_recformat\n                _convert_ascii_format\n                _parse_tdisp_format\n                _fortran_to_python_format\n                python_to_tdisp\n                convert_int\n            verify.py\n              Classes:\n                VerifyError\n                VerifyWarning\n                _Verify\n                _ErrList\n            fitsrec.py\n              Classes:\n                FITS_record\n                FITS_rec\n                _UnicodeArrayEncodeError\n              Functions:\n                _get_recarray_field\n                _ascii_encode\n                _has_unicode_fields\n            setup_package.py\n              Functions:\n                _get_compression_extension\n                get_extensions\n            connect.py\n              Functions:\n                is_column_keyword\n                is_fits\n                _decode_mixins\n                read_table_fits\n                _encode_mixins\n                write_table_fits\n            util.py\n              Classes:\n                NotifierMixin\n                SigintHandler\n              Functions:\n                first\n                itersubclasses\n                ignore_sigint\n                pairwise\n                encode_ascii\n                decode_ascii\n                isreadable\n                iswritable\n                isfile\n                fileobj_open\n                fileobj_name\n                fileobj_closed\n                fileobj_mode\n                _fileobj_normalize_mode\n                fileobj_is_binary\n                translate\n                fill\n                _array_from_file\n                _array_to_file\n                _array_to_file_like\n                _write_string\n                _convert_array\n                _pseudo_zero\n                _is_pseudo_integer\n                _is_int\n                _str_to_num\n                _words_group\n                _tmp_name\n                _get_array_mmap\n                _free_space_check\n                _extract_number\n                get_testdata_filepath\n                _rstrip_inplace\n                _is_dask_array\n                wrapped\n                maybe_fill\n            card.py\n              Classes:\n                Undefined\n                Card\n              Functions:\n                _int_or_float\n                _format_float\n                _pad\n            hdu/\n                base.py\n                  Classes:\n                    _Delayed\n                    InvalidHDUException\n                    _BaseHDU\n                    _CorruptedHDU\n                    _NonstandardHDU\n                    _ValidHDU\n                    ExtensionHDU\n                    NonstandardExtHDU\n                  Functions:\n                    _hdu_class_from_header\n                    block_iter\n                    fix\n                    fix\n                    fix\n                    fix\n                    fix\n                hdulist.py\n                  Classes:\n                    HDUList\n                  Functions:\n                    fitsopen\n                    get_first_ext\n                    fix\n                    fix\n                nonstandard.py\n                  Classes:\n                    FitsHDU\n                groups.py\n                  Classes:\n                    Group\n                    GroupData\n                    GroupsHDU\n                  Functions:\n                    _par_indices\n                    _unique_parnames\n                streaming.py\n                  Classes:\n                    StreamingHDU\n                __init__.py\n                table.py\n                  Classes:\n                    FITSTableDumpDialect\n                    _TableLikeHDU\n                    _TableBaseHDU\n                    TableHDU\n                    BinTableHDU\n                  Functions:\n                    _binary_table_byte_swap\n                    format_value\n                    update_recformats\n                    format_value\n                    fix\n                image.py\n                  Classes:\n                    _ImageBaseHDU\n                    Section\n                    PrimaryHDU\n                    ImageHDU\n                    _IndexInfo\n                compressed.py\n                  Classes:\n                    CompImageHeader\n                    CompImageHDU\n            scripts/\n                fitsdiff.py\n                  Classes:\n                    StoreListAction\n                    LevelFilter\n                  Functions:\n                    handle_options\n                    setup_logging\n                    match_files\n                    main\n                __init__.py\n                fitsinfo.py\n                  Functions:\n                    fitsinfo\n                    main\n                fitsheader.py\n                  Classes:\n                    ExtensionNotFoundException\n                    HeaderFormatter\n                    TableHeaderFormatter\n                    KeywordAppendAction\n                  Functions:\n                    print_headers_traditional\n                    print_headers_as_table\n                    print_headers_as_comparison\n                    main\n                fitscheck.py\n                  Functions:\n                    handle_options\n                    setup_logging\n                    verify_checksums\n                    verify_compliance\n                    update\n                    process_file\n                    main\n        misc/\n            hdf5.py\n              Functions:\n                meta_path\n                _find_all_structured_arrays\n                is_hdf5\n                read_table_hdf5\n                _encode_mixins\n                write_table_hdf5\n                register_hdf5\n                append_structured_arrays\n            pickle_helpers.py\n              Functions:\n                fnunpickle\n                fnpickle\n            __init__.py\n            parquet.py\n              Functions:\n                parquet_identify\n                read_table_parquet\n                write_table_parquet\n                _get_names\n                register_parquet\n                get_pyarrow\n            connect.py\n            yaml.py\n              Classes:\n                AstropyLoader\n                AstropyDumper\n              Functions:\n                _unit_representer\n                _unit_constructor\n                _serialized_column_representer\n                _serialized_column_constructor\n                _time_representer\n                _time_constructor\n                _timedelta_representer\n                _timedelta_constructor\n                _ndarray_representer\n                _ndarray_constructor\n                _void_representer\n                _void_constructor\n                _quantity_representer\n                _quantity_constructor\n                _skycoord_representer\n                _skycoord_constructor\n                _complex_representer\n                _complex_constructor\n                load\n                load_all\n                dump\n                representer\n                constructor\n            pandas/\n                __init__.py\n                connect.py\n                  Functions:\n                    import_html_libs\n                    _pandas_read\n                    _pandas_write\n            asdf/\n                types.py\n                  Classes:\n                    AstropyTypeMeta\n                    AstropyType\n                    AstropyAsdfType\n                __init__.py\n                connect.py\n                  Functions:\n                    read_table\n                    write_table\n                    asdf_identify\n                extension.py\n                  Classes:\n                    AstropyExtension\n                    AstropyAsdfExtension\n                tags/\n                    __init__.py\n                    helpers.py\n                      Functions:\n                        skycoord_equal\n                    time/\n                        timedelta.py\n                          Classes:\n                            TimeDeltaType\n                        __init__.py\n                        time.py\n                          Classes:\n                            TimeType\n                          Functions:\n                            _assert_earthlocation_equal\n                    unit/\n                        __init__.py\n                        unit.py\n                          Classes:\n                            UnitType\n                        quantity.py\n                          Classes:\n                            QuantityType\n                        equivalency.py\n                          Classes:\n                            EquivalencyType\n                    fits/\n                        fits.py\n                          Classes:\n                            FitsType\n                            AstropyFitsType\n                            AsdfFitsType\n                        __init__.py\n                    transform/\n                        tabular.py\n                          Classes:\n                            TabularType\n                        compound.py\n                          Classes:\n                            CompoundType\n                            RemapAxesType\n                        math.py\n                          Classes:\n                            NpUfuncType\n                        __init__.py\n                          Functions:\n                            _parameter_to_value\n                        projections.py\n                          Classes:\n                            AffineType\n                            Rotate2DType\n                            Rotate3DType\n                            RotationSequenceType\n                            GenericProjectionType\n                          Functions:\n                            make_projection_types\n                        polynomial.py\n                          Classes:\n                            ShiftType\n                            ScaleType\n                            MultiplyType\n                            PolynomialTypeBase\n                            PolynomialType1_0\n                            PolynomialType1_1\n                            PolynomialType1_2\n                            OrthoPolynomialType\n                            Linear1DType\n                        physical_models.py\n                          Classes:\n                            BlackBody\n                            Drude1DType\n                            Plummer1DType\n                        powerlaws.py\n                          Classes:\n                            PowerLaw1DType\n                            BrokenPowerLaw1DType\n                            SmoothlyBrokenPowerLaw1DType\n                            ExponentialCutoffPowerLaw1DType\n                            LogParabola1DType\n                        spline.py\n                          Classes:\n                            SplineType\n                        basic.py\n                          Classes:\n                            TransformType\n                            IdentityType\n                            ConstantType\n                            GenericModel\n                            GenericType\n                            UnitsMappingType\n                        functional_models.py\n                          Classes:\n                            AiryDisk2DType\n                            Box1DType\n                            Box2DType\n                            Disk2DType\n                            Ellipse2DType\n                            Exponential1DType\n                            Gaussian1DType\n                            Gaussian2DType\n                            KingProjectedAnalytic1DType\n                            Logarithmic1DType\n                            Lorentz1DType\n                            Moffat1DType\n                            Moffat2DType\n                            Planar2D\n                            RedshiftScaleFactorType\n                            RickerWavelet1DType\n                            RickerWavelet2DType\n                            Ring2DType\n                            Sersic1DType\n                            Sersic2DType\n                            Trigonometric1DType\n                            Sine1DType\n                            Cosine1DType\n                            Tangent1DType\n                            ArcSine1DType\n                            ArcCosine1DType\n                            ArcTangent1DType\n                            Trapezoid1DType\n                            TrapezoidDisk2DType\n                            Voigt1DType\n                    coordinates/\n                        skycoord.py\n                          Classes:\n                            SkyCoordType\n                        frames.py\n                          Classes:\n                            BaseCoordType\n                            CoordType\n                            ICRSType\n                            ICRSType10\n                          Functions:\n                            _get_frames\n                        __init__.py\n                        spectralcoord.py\n                          Classes:\n                            SpectralCoordType\n                        angle.py\n                          Classes:\n                            AngleType\n                            LatitudeType\n                            LongitudeType\n                        representation.py\n                          Classes:\n                            RepresentationType\n                        earthlocation.py\n                          Classes:\n                            EarthLocationType\n                    table/\n                        __init__.py\n                        table.py\n                          Classes:\n                            TableType\n                            AstropyTableType\n                            AsdfTableType\n                            ColumnType\n        registry/\n            base.py\n              Classes:\n                IORegistryError\n                _UnifiedIORegistryBase\n            compat.py\n              Functions:\n                _make_io_func\n                __dir__\n                __getattr__\n                wrapper\n            __init__.py\n            interface.py\n              Classes:\n                UnifiedReadWrite\n                UnifiedReadWriteMethod\n            core.py\n              Classes:\n                UnifiedInputRegistry\n                UnifiedOutputRegistry\n                UnifiedIORegistry\n        votable/\n            xmlutil.py\n              Functions:\n                check_id\n                fix_id\n                check_token\n                check_mime_content_type\n                check_anyuri\n                validate_schema\n            ucd.py\n              Classes:\n                UCDWords\n              Functions:\n                parse_ucd\n                check_ucd\n            tree.py\n              Classes:\n                _IDProperty\n                _NameProperty\n                _XtypeProperty\n                _UtypeProperty\n                _UcdProperty\n                _DescriptionProperty\n                Element\n                SimpleElement\n                SimpleElementWithContent\n                Link\n                Info\n                Values\n                Field\n                Param\n                CooSys\n                TimeSys\n                FieldRef\n                ParamRef\n                Group\n                Table\n                Resource\n                VOTableFile\n              Functions:\n                _resize\n                _lookup_by_attr_factory\n                _lookup_by_id_or_name_factory\n                _get_default_unit_format\n                _get_unit_format\n                check_astroyear\n                check_string\n                resolve_id\n                check_ucd\n                lookup_by_attr\n                lookup_by_attr_unique\n                lookup_by_id_or_name\n                yes_no\n                careful_read\n            volint.py\n              Functions:\n                main\n            __init__.py\n              Classes:\n                Conf\n            exceptions.py\n              Classes:\n                Conf\n                VOWarning\n                VOTableChangeWarning\n                VOTableSpecWarning\n                UnimplementedWarning\n                IOWarning\n                VOTableSpecError\n                W01\n                W02\n                W03\n                W04\n                W05\n                W06\n                W07\n                W08\n                W09\n                W10\n                W11\n                W12\n                W13\n                W15\n                W17\n                W18\n                W19\n                W20\n                W21\n                W22\n                W23\n                W24\n                W25\n                W26\n                W27\n                W28\n                W29\n                W30\n                W31\n                W32\n                W33\n                W34\n                W35\n                W36\n                W37\n                W38\n                W39\n                W40\n                W41\n                W42\n                W43\n                W44\n                W45\n                W46\n                W47\n                W48\n                W49\n                W50\n                W51\n                W52\n                W53\n                W54\n                W55\n                E01\n                E02\n                E03\n                E04\n                E05\n                E06\n                E08\n                E09\n                E10\n                E11\n                E12\n                E13\n                E14\n                E15\n                E16\n                E17\n                E18\n                E19\n                E20\n                E21\n                E22\n                E23\n                E24\n                E25\n              Functions:\n                _format_message\n                _suppressed_warning\n                warn_or_raise\n                vo_raise\n                vo_reraise\n                vo_warn\n                warn_unknown_attrs\n                parse_vowarning\n                _get_warning_and_exception_classes\n                _build_doc_string\n                generate_set\n            table.py\n              Functions:\n                parse\n                parse_single_table\n                writeto\n                validate\n                from_table\n                is_votable\n                reset_vo_warnings\n            setup_package.py\n              Functions:\n                get_extensions\n            converters.py\n              Classes:\n                Converter\n                Char\n                UnicodeChar\n                Array\n                VarArray\n                ArrayVarArray\n                ScalarVarArray\n                NumericArray\n                Numeric\n                FloatingPoint\n                Double\n                Float\n                Integer\n                UnsignedByte\n                Short\n                Int\n                Long\n                ComplexArrayVarArray\n                ComplexVarArray\n                ComplexArray\n                Complex\n                FloatComplex\n                DoubleComplex\n                BitArray\n                Bit\n                BooleanArray\n                Boolean\n              Functions:\n                _make_masked_array\n                bitarray_to_bool\n                bool_to_bitarray\n                get_converter\n                _all_matching_dtype\n                numpy_to_votable_dtype\n                table_column_to_votable_datatype\n                _ensure_bigendian\n                _ensure_bigendian\n            connect.py\n              Functions:\n                is_votable\n                read_table_votable\n                write_table_votable\n            util.py\n              Functions:\n                convert_to_writable_filelike\n                coerce_range_list_param\n                version_compare\n                str_or_none\n                numeric_or_range\n                is_frame_of_reference\n                version_to_tuple\n            validator/\n                html.py\n                  Functions:\n                    make_html_header\n                    write_source_line\n                    write_warning\n                    write_votlint_warning\n                    write_result\n                    write_result_row\n                    write_table\n                    add_subset\n                    write_index\n                    write_index_table\n                    write_page_links\n                __init__.py\n                main.py\n                  Functions:\n                    get_srcdir\n                    get_urls\n                    download\n                    validate_vo\n                    votlint_validate\n                    write_html_result\n                    write_subindex\n                    make_validation_report\n                result.py\n                  Classes:\n                    Result\n                  Functions:\n                    get_result_subsets\n                    fail\n        ascii/\n            ui.py\n              Functions:\n                _probably_html\n                set_guess\n                get_reader\n                _get_format_class\n                _get_fast_reader_dict\n                _validate_read_write_kwargs\n                read\n                _guess\n                _get_guess_kwargs_list\n                _read_in_chunks\n                _read_in_chunks_generator\n                get_writer\n                write\n                get_read_trace\n                is_ducktype\n                passthrough_fileobj\n            fastbasic.py\n              Classes:\n                FastBasic\n                FastCsv\n                FastTab\n                FastNoHeader\n                FastCommentedHeader\n                FastRdb\n            html.py\n              Classes:\n                SoupString\n                ListWriter\n                HTMLInputter\n                HTMLSplitter\n                HTMLOutputter\n                HTMLHeader\n                HTMLData\n                HTML\n              Functions:\n                identify_table\n            latex.py\n              Classes:\n                LatexInputter\n                LatexSplitter\n                LatexHeader\n                LatexData\n                Latex\n                AASTexHeaderSplitter\n                AASTexHeader\n                AASTexData\n                AASTex\n              Functions:\n                add_dictval_to_list\n                find_latex_line\n            mrt.py\n              Classes:\n                MrtSplitter\n                MrtHeader\n                MrtData\n                Mrt\n            ipac.py\n              Classes:\n                IpacFormatErrorDBMS\n                IpacFormatError\n                IpacHeaderSplitter\n                IpacHeader\n                IpacDataSplitter\n                IpacData\n                Ipac\n              Functions:\n                process_keyword_value\n            misc.py\n              Functions:\n                first_true_index\n                first_false_index\n                sortmore\n                groupmore\n            daophot.py\n              Classes:\n                DaophotHeader\n                DaophotData\n                DaophotInputter\n                Daophot\n            cds.py\n              Classes:\n                CdsHeader\n                CdsData\n                Cds\n            qdp.py\n              Classes:\n                QDPSplitter\n                QDPHeader\n                QDPData\n                QDP\n              Functions:\n                _line_type\n                _get_type_from_list_of_lines\n                _get_lines_from_file\n                _interpret_err_lines\n                _get_tables_from_qdp_file\n                _understand_err_col\n                _read_table_qdp\n                _write_table_qdp\n            __init__.py\n            setup_package.py\n              Functions:\n                get_extensions\n            fixedwidth.py\n              Classes:\n                FixedWidthSplitter\n                FixedWidthHeaderSplitter\n                FixedWidthHeader\n                FixedWidthData\n                FixedWidth\n                FixedWidthNoHeaderHeader\n                FixedWidthNoHeaderData\n                FixedWidthNoHeader\n                FixedWidthTwoLineHeader\n                FixedWidthTwoLineDataSplitter\n                FixedWidthTwoLineData\n                FixedWidthTwoLine\n            ecsv.py\n              Classes:\n                EcsvHeader\n                EcsvOutputter\n                EcsvData\n                Ecsv\n              Functions:\n                _check_dtype_is_str\n                format_col_item\n                format_col_item\n            connect.py\n              Functions:\n                io_read\n                io_write\n                io_identify\n                _get_connectors_table\n            basic.py\n              Classes:\n                BasicHeader\n                BasicData\n                Basic\n                NoHeaderHeader\n                NoHeaderData\n                NoHeader\n                CommentedHeaderHeader\n                CommentedHeader\n                TabHeaderSplitter\n                TabDataSplitter\n                TabHeader\n                TabData\n                Tab\n                CsvSplitter\n                CsvHeader\n                CsvData\n                Csv\n                RdbHeader\n                RdbData\n                Rdb\n            rst.py\n              Classes:\n                SimpleRSTHeader\n                SimpleRSTData\n                RST\n            sextractor.py\n              Classes:\n                SExtractorHeader\n                SExtractorData\n                SExtractor\n            core.py\n              Classes:\n                CsvWriter\n                MaskedConstant\n                InconsistentTableError\n                OptionalTableImportError\n                ParameterError\n                FastOptionsError\n                NoType\n                StrType\n                NumType\n                FloatType\n                BoolType\n                IntType\n                AllType\n                Column\n                BaseInputter\n                BaseSplitter\n                DefaultSplitter\n                BaseHeader\n                BaseData\n                BaseOutputter\n                TableOutputter\n                MetaBaseReader\n                BaseReader\n                ContinuationLinesInputter\n                WhitespaceSplitter\n              Functions:\n                _check_multidim_table\n                _replace_tab_with_space\n                _get_line_index\n                convert_numpy\n                _deduplicate_names\n                _is_number\n                _apply_include_exclude_names\n                _get_reader\n                _get_writer\n                bool_converter\n                generic_converter\n                rename_columns\n            docs.py\n    constants/\n        config.py\n        astropyconst20.py\n        codata2018.py\n          Classes:\n            CODATA2018\n            EMCODATA2018\n        iau2015.py\n          Classes:\n            IAU2015\n        codata2014.py\n          Classes:\n            CODATA2014\n            EMCODATA2014\n        codata2010.py\n          Classes:\n            CODATA2010\n            EMCODATA2010\n        iau2012.py\n          Classes:\n            IAU2012\n        __init__.py\n        utils.py\n          Functions:\n            _get_c\n            _set_c\n        astropyconst13.py\n        si.py\n        astropyconst40.py\n        cgs.py\n        constant.py\n          Classes:\n            ConstantMeta\n            Constant\n            EMConstant\n          Functions:\n            wrap\n            wrapper\n    wcs/\n        docstrings.py\n          Functions:\n            _fix\n            TWO_OR_MORE_ARGS\n            RETURNS\n            ORIGIN\n            RA_DEC_ORDER\n        __init__.py\n          Functions:\n            get_include\n        utils.py\n          Classes:\n            custom_wcs_to_frame_mappings\n            custom_frame_to_wcs_mappings\n          Functions:\n            add_stokes_axis_to_wcs\n            _wcs_to_celestial_frame_builtin\n            _celestial_frame_to_wcs_builtin\n            wcs_to_celestial_frame\n            celestial_frame_to_wcs\n            proj_plane_pixel_scales\n            proj_plane_pixel_area\n            is_proj_plane_distorted\n            _is_cd_orthogonal\n            non_celestial_pixel_scales\n            _has_distortion\n            skycoord_to_pixel\n            pixel_to_skycoord\n            _unique_with_order_preserved\n            _pixel_to_world_correlation_matrix\n            _pixel_to_pixel_correlation_matrix\n            _split_matrix\n            pixel_to_pixel\n            local_partial_pixel_derivatives\n            _linear_wcs_fit\n            _sip_fit\n            fit_wcs_from_points\n            obsgeo_to_frame\n        wcslint.py\n          Functions:\n            main\n        wcs.py\n          Classes:\n            NoConvergence\n            FITSFixedWarning\n            WCS\n            _WcsValidateWcsResult\n            _WcsValidateHduResult\n            _WcsValidateResults\n          Functions:\n            _parse_keysel\n            __WCS_unpickle__\n            find_all_wcs\n            validate\n            _load_tab_bintable\n            write_d2i\n            write_dist\n            write_array\n            _return_list_of_arrays\n            _return_single_array\n        setup_package.py\n          Functions:\n            b\n            string_escape\n            determine_64_bit_int\n            write_wcsconfig_h\n            generate_c_docstrings\n            get_wcslib_cfg\n            get_extensions\n        wcsapi/\n            sliced_low_level_wcs.py\n            low_level_api.py\n              Classes:\n                BaseLowLevelWCS\n              Functions:\n                validate_physical_types\n            __init__.py\n            utils.py\n              Functions:\n                deserialize_class\n                wcs_info_str\n            high_level_api.py\n              Classes:\n                BaseHighLevelWCS\n                HighLevelWCSMixin\n              Functions:\n                rec_getattr\n                default_order\n                _toindex\n                high_level_objects_to_values\n                values_to_high_level_objects\n            fitswcs.py\n              Classes:\n                custom_ctype_to_ucd_mapping\n                SlicedFITSWCS\n                FITSWCSAPIMixin\n              Functions:\n                spectralcoord_from_redshift\n                redshift_from_spectralcoord\n                spectralcoord_from_beta\n                beta_from_spectralcoord\n                spectralcoord_from_value\n                value_from_spectralcoord\n                time_from_reference_and_offset\n                offset_from_time_and_reference\n            high_level_wcs_wrapper.py\n              Classes:\n                HighLevelWCSWrapper\n            conftest.py\n              Classes:\n                Spectral1DLowLevelWCS\n                Celestial2DLowLevelWCS\n              Functions:\n                spectral_1d_fitswcs\n                time_1d_fitswcs\n                celestial_2d_fitswcs\n                spectral_cube_3d_fitswcs\n                cube_4d_fitswcs\n                spectral_1d_ape14_wcs\n                celestial_2d_ape14_wcs\n            wrappers/\n                base.py\n                  Classes:\n                    BaseWCSWrapper\n                sliced_wcs.py\n                  Classes:\n                    SlicedLowLevelWCS\n                  Functions:\n                    sanitize_slices\n                    combine_slices\n                __init__.py\n    uncertainty/\n        __init__.py\n        distributions.py\n          Functions:\n            normal\n            poisson\n            uniform\n        core.py\n          Classes:\n            Distribution\n            ScalarDistribution\n            ArrayDistribution\n            _DistributionRepr\n            NdarrayDistribution\n    timeseries/\n        downsample.py\n          Functions:\n            reduceat\n            aggregate_downsample\n        binned.py\n          Classes:\n            BinnedTimeSeries\n        __init__.py\n        sampled.py\n          Classes:\n            TimeSeries\n        core.py\n          Classes:\n            BaseTimeSeries\n          Functions:\n            autocheck_required_columns\n            decorator_method\n            wrapper\n        io/\n            __init__.py\n            kepler.py\n              Functions:\n                kepler_fits_reader\n        periodograms/\n            base.py\n              Classes:\n                BasePeriodogram\n            __init__.py\n            lombscargle/\n                _statistics.py\n                  Functions:\n                    _weighted_sum\n                    _weighted_mean\n                    _weighted_var\n                    _gamma\n                    vectorize_first_argument\n                    pdf_single\n                    fap_single\n                    inv_fap_single\n                    cdf_single\n                    tau_davies\n                    fap_naive\n                    inv_fap_naive\n                    fap_davies\n                    inv_fap_davies\n                    fap_baluev\n                    inv_fap_baluev\n                    _bootstrap_max\n                    fap_bootstrap\n                    inv_fap_bootstrap\n                    false_alarm_probability\n                    false_alarm_level\n                    new_func\n                __init__.py\n                utils.py\n                  Functions:\n                    compute_chi2_ref\n                    convert_normalization\n                core.py\n                  Classes:\n                    LombScargle\n                  Functions:\n                    has_units\n                    get_unit\n                    strip_units\n                implementations/\n                    fastchi2_impl.py\n                      Functions:\n                        lombscargle_fastchi2\n                        compute_power\n                    chi2_impl.py\n                      Functions:\n                        lombscargle_chi2\n                        compute_power\n                    __init__.py\n                    utils.py\n                      Functions:\n                        bitceil\n                        extirpolate\n                        trig_sum\n                    main.py\n                      Functions:\n                        available_methods\n                        _is_regular\n                        _get_frequency_grid\n                        validate_method\n                        lombscargle\n                    scipy_impl.py\n                      Functions:\n                        lombscargle_scipy\n                    slow_impl.py\n                      Functions:\n                        lombscargle_slow\n                    mle.py\n                      Functions:\n                        design_matrix\n                        periodic_fit\n                    fast_impl.py\n                      Functions:\n                        lombscargle_fast\n            bls/\n                __init__.py\n                methods.py\n                  Functions:\n                    bls_slow\n                    bls_fast\n                    _bls_slow_one\n                    _apply\n                setup_package.py\n                  Functions:\n                    get_extensions\n                core.py\n                  Classes:\n                    BoxLeastSquares\n                    BoxLeastSquaresResults\n                  Functions:\n                    validate_unit_consistency\n                    _compute_depth\n    units/\n        imperial.py\n          Functions:\n            enable\n        physical.py\n          Classes:\n            PhysicalType\n          Functions:\n            _physical_type_from_str\n            _replace_temperatures_with_kelvin\n            _standardize_physical_type_names\n            def_physical_type\n            get_physical_type\n            __dir__\n        misc.py\n        cds.py\n          Functions:\n            _initialize_module\n            enable\n        __init__.py\n          Functions:\n            __getattr__\n        utils.py\n          Functions:\n            _get_first_sentence\n            _iter_unit_summary\n            generate_unit_summary\n            generate_prefixonly_unit_summary\n            is_effectively_unity\n            sanitize_scale\n            maybe_simple_fraction\n            validate_power\n            resolve_fractions\n            quantity_asanyarray\n        astrophys.py\n          Functions:\n            __getattr__\n        deprecated.py\n          Functions:\n            _initialize_module\n            enable\n        si.py\n        required_by_vounit.py\n          Functions:\n            _initialize_module\n            _enable\n        photometric.py\n          Functions:\n            zero_point_flux\n        _typing.py\n        equivalencies.py\n          Classes:\n            Equivalency\n          Functions:\n            dimensionless_angles\n            logarithmic\n            parallax\n            spectral\n            spectral_density\n            doppler_radio\n            doppler_optical\n            doppler_relativistic\n            doppler_redshift\n            molar_mass_amu\n            mass_energy\n            brightness_temperature\n            beam_angular_area\n            thermodynamic_temperature\n            temperature\n            temperature_energy\n            assert_is_spectral_unit\n            pixel_scale\n            plate_scale\n            __getattr__\n            parallax_converter\n            converter\n            iconverter\n            converter_f_nu_to_nu_f_nu\n            iconverter_f_nu_to_nu_f_nu\n            converter_f_la_to_la_f_la\n            iconverter_f_la_to_la_f_la\n            converter_phot_f_la_to_f_la\n            iconverter_phot_f_la_to_f_la\n            converter_phot_f_la_to_f_nu\n            iconverter_phot_f_la_to_f_nu\n            converter_phot_f_la_phot_f_nu\n            iconverter_phot_f_la_phot_f_nu\n            converter_phot_f_nu_to_f_la\n            iconverter_phot_f_nu_to_f_la\n            to_vel_freq\n            from_vel_freq\n            to_vel_wav\n            from_vel_wav\n            to_vel_en\n            from_vel_en\n            to_vel_freq\n            from_vel_freq\n            to_vel_wav\n            from_vel_wav\n            to_vel_en\n            from_vel_en\n            to_vel_freq\n            from_vel_freq\n            to_vel_wav\n            from_vel_wav\n            to_vel_en\n            from_vel_en\n            convert_z_to_rv\n            convert_rv_to_z\n            f\n            convert_Jy_to_K\n            convert_K_to_Jy\n            convert_Jy_to_K\n            convert_K_to_Jy\n            convert_JySr_to_K\n            convert_K_to_JySr\n        structured.py\n          Classes:\n            StructuredUnit\n            Structure\n          Functions:\n            _names_from_dtype\n            _normalize_names\n            converter\n        cgs.py\n        decorators.py\n          Classes:\n            QuantityInput\n          Functions:\n            _get_allowed_units\n            _validate_arg_value\n            _parse_annotation\n            wrapper\n        quantity.py\n          Classes:\n            Conf\n            QuantityIterator\n            QuantityInfoBase\n            QuantityInfo\n            Quantity\n            SpecificTypeQuantity\n          Functions:\n            isclose\n            allclose\n            _unquantify_allclose_arguments\n            get_virtual_unit_attribute\n            quantity_iter\n            float_formatter\n            complex_formatter\n        core.py\n          Classes:\n            _UnitRegistry\n            _UnitContext\n            UnitsError\n            UnitScaleError\n            UnitConversionError\n            UnitTypeError\n            UnitsWarning\n            UnitBase\n            NamedUnit\n            IrreducibleUnit\n            UnrecognizedUnit\n            _UnitMetaClass\n            Unit\n            PrefixUnit\n            CompositeUnit\n            EquivalentUnitsList\n          Functions:\n            _flatten_units_collection\n            _normalize_equivalencies\n            get_current_unit_registry\n            _recreate_irreducible_unit\n            _add_prefixes\n            def_unit\n            _condition_arg\n            unit_scale_converter\n            make_converter\n            get_err_str\n            is_final_result\n            has_bases_in_common\n            has_bases_in_common_with_equiv\n            filter_units\n            sort_results\n            score\n            add_unit\n            convert\n        function/\n            units.py\n            __init__.py\n            mixin.py\n              Classes:\n                FunctionMixin\n                IrreducibleFunctionUnit\n                RegularFunctionUnit\n            logarithmic.py\n              Classes:\n                LogUnit\n                MagUnit\n                DexUnit\n                DecibelUnit\n                LogQuantity\n                Dex\n                Decibel\n                Magnitude\n            core.py\n              Classes:\n                FunctionUnitBase\n                FunctionQuantity\n        quantity_helper/\n            scipy_special.py\n              Functions:\n                helper_degree_to_dimensionless\n                helper_degree_minute_second_to_radian\n                get_scipy_special_helpers\n            erfa.py\n              Functions:\n                has_matching_structure\n                check_structured_unit\n                helper_s2c\n                helper_s2p\n                helper_c2s\n                helper_p2s\n                helper_gc2gd\n                helper_gd2gc\n                helper_p2pv\n                helper_pv2p\n                helper_pv2s\n                helper_s2pv\n                helper_pv_multiplication\n                helper_pvm\n                helper_pvstar\n                helper_starpv\n                helper_pvtob\n                helper_pvu\n                helper_pvup\n                helper_s2xpv\n                ldbody_unit\n                astrom_unit\n                helper_ldn\n                helper_aper\n                helper_apio\n                helper_atciq\n                helper_atciqn\n                helper_atciqz_aticq\n                helper_aticqn\n                helper_atioq\n                helper_atoiq\n                get_erfa_helpers\n            function_helpers.py\n              Classes:\n                FunctionAssigner\n              Functions:\n                invariant_a_helper\n                invariant_m_helper\n                invariant_x_helper\n                like_helper\n                sinc\n                unwrap\n                argpartition\n                full_like\n                putmask\n                place\n                copyto\n                nan_to_num\n                _as_quantity\n                _as_quantities\n                _quantities2arrays\n                _iterable_helper\n                concatenate\n                block\n                choose\n                select\n                piecewise\n                append\n                insert\n                pad\n                where\n                quantile\n                percentile\n                count_nonzero\n                close\n                array_equal\n                array_equiv\n                dot_like\n                cross_like\n                einsum\n                bincount\n                digitize\n                _check_bins\n                histogram\n                histogram_bin_edges\n                histogram2d\n                histogramdd\n                diff\n                gradient\n                logspace\n                geomspace\n                interp\n                unique\n                intersect1d\n                twosetop\n                setcheckop\n                apply_over_axes\n                array_repr\n                array_str\n                array2string\n                diag\n                svd\n                _interpret_tol\n                matrix_rank\n                inv\n                pinv\n                det\n                solve\n                lstsq\n                norm\n                matrix_power\n                cholesky\n                qr\n                eig\n                structured_to_unstructured\n                _build_structured_unit\n                unstructured_to_structured\n                replace_unit\n            __init__.py\n            helpers.py\n              Functions:\n                _d\n                get_converter\n                get_converters_and_unit\n                helper_onearg_test\n                helper_invariant\n                helper_square\n                helper_reciprocal\n                helper_sqrt\n                helper_cbrt\n                helper_modf\n                helper__ones_like\n                helper_dimensionless_to_dimensionless\n                helper_dimensionless_to_radian\n                helper_degree_to_radian\n                helper_radian_to_degree\n                helper_radian_to_dimensionless\n                helper_frexp\n                helper_multiplication\n                helper_division\n                helper_power\n                helper_ldexp\n                helper_copysign\n                helper_heaviside\n                helper_two_arg_dimensionless\n                helper_twoarg_comparison\n                helper_twoarg_invtrig\n                helper_twoarg_floor_divide\n                helper_divmod\n                helper_clip\n            converters.py\n              Classes:\n                UfuncHelpers\n              Functions:\n                can_have_arbitrary_unit\n                converters_and_unit\n                check_output\n        format/\n            base.py\n              Classes:\n                Base\n            generic.py\n              Classes:\n                Generic\n                Unscaled\n              Functions:\n                _to_string\n                t_UFLOAT\n                t_UINT\n                t_SIGN\n                t_FUNCNAME\n                t_UNIT\n                t_error\n                p_main\n                p_structured_subunit\n                p_structured_unit\n                p_subunit\n                p_unit\n                p_division_product_of_units\n                p_inverse_unit\n                p_factor\n                p_factor_float\n                p_factor_int\n                p_factor_fits\n                p_product_of_units\n                p_unit_expression\n                p_unit_with_power\n                p_numeric_power\n                p_paren_expr\n                p_frac\n                p_sign\n                p_product\n                p_division\n                p_power\n                p_signed_int\n                p_signed_float\n                p_function_name\n                p_function\n                p_error\n            latex.py\n              Classes:\n                Latex\n                LatexInline\n            fits.py\n              Classes:\n                Fits\n            cds.py\n              Classes:\n                CDS\n              Functions:\n                t_UFLOAT\n                t_UINT\n                t_SIGN\n                t_X\n                t_UNIT\n                t_DIMENSIONLESS\n                t_error\n                p_main\n                p_combined_units\n                p_product_of_units\n                p_division_of_units\n                p_unit_expression\n                p_factor\n                p_unit_with_power\n                p_numeric_power\n                p_sign\n                p_signed_int\n                p_signed_float\n                p_error\n            cds_lextab.py\n            __init__.py\n              Functions:\n                _known_formats\n                get_format\n            ogip.py\n              Classes:\n                OGIP\n              Functions:\n                t_UFLOAT\n                t_UINT\n                t_SIGN\n                t_X\n                t_LIT10\n                t_UNKNOWN\n                t_UNIT\n                t_error\n                p_main\n                p_complete_expression\n                p_product_of_units\n                p_unit_expression\n                p_scale_factor\n                p_division\n                p_product\n                p_power\n                p_unit\n                p_numeric_power\n                p_sign\n                p_signed_int\n                p_signed_float\n                p_error\n            generic_lextab.py\n            vounit.py\n              Classes:\n                VOUnit\n              Functions:\n                do_defines\n                def_base\n            utils.py\n              Functions:\n                get_grouped_by_powers\n                split_mantissa_exponent\n                decompose_to_known_units\n                format_power\n                _try_decomposed\n                did_you_mean_units\n                unit_deprecation_warning\n                fix_deprecated\n            cds_parsetab.py\n            generic_parsetab.py\n            ogip_lextab.py\n            console.py\n              Classes:\n                Console\n            ogip_parsetab.py\n            unicode_format.py\n              Classes:\n                Unicode\n    visualization/\n        stretch.py\n          Classes:\n            BaseStretch\n            LinearStretch\n            SqrtStretch\n            PowerStretch\n            PowerDistStretch\n            InvertedPowerDistStretch\n            SquaredStretch\n            LogStretch\n            InvertedLogStretch\n            AsinhStretch\n            SinhStretch\n            HistEqStretch\n            InvertedHistEqStretch\n            ContrastBiasStretch\n            InvertedContrastBiasStretch\n            CompositeStretch\n          Functions:\n            _logn\n            _prepare\n        transform.py\n          Classes:\n            BaseTransform\n            CompositeTransform\n        units.py\n          Classes:\n            MplQuantityConverter\n          Functions:\n            quantity_support\n            all_issubclass\n            rad_fn\n        hist.py\n          Functions:\n            hist\n        __init__.py\n        mpl_normalize.py\n          Classes:\n            ImageNormalize\n            Normalize\n          Functions:\n            simple_norm\n            imshow_norm\n        interval.py\n          Classes:\n            BaseInterval\n            ManualInterval\n            MinMaxInterval\n            AsymmetricPercentileInterval\n            PercentileInterval\n            ZScaleInterval\n        lupton_rgb.py\n          Classes:\n            Mapping\n            LinearMapping\n            AsinhMapping\n            AsinhZScaleMapping\n          Functions:\n            compute_intensity\n            make_lupton_rgb\n        mpl_style.py\n        time.py\n          Classes:\n            AstropyTimeLocator\n            AstropyTimeFormatter\n            MplTimeConverter\n          Functions:\n            time_support\n        wcsaxes/\n            wcsapi.py\n              Classes:\n                WCSWorld2PixelTransform\n                WCSPixel2WorldTransform\n              Functions:\n                transform_coord_meta_from_wcs\n                apply_slices\n                wcsapi_to_celestial_frame\n            transforms.py\n              Classes:\n                CurvedTransform\n                CoordinateTransform\n                World2PixelTransform\n                Pixel2WorldTransform\n            coordinates_map.py\n              Classes:\n                CoordinatesMap\n            coordinate_helpers.py\n              Classes:\n                CoordinateHelper\n              Functions:\n                wrap_angle_at\n            formatter_locator.py\n              Classes:\n                BaseFormatterLocator\n                AngleFormatterLocator\n                ScalarFormatterLocator\n            grid_paths.py\n              Functions:\n                get_lon_lat_path\n                get_gridline_path\n            __init__.py\n              Classes:\n                Conf\n            utils.py\n              Functions:\n                select_step_degree\n                select_step_hour\n                select_step_scalar\n                get_coord_meta\n                transform_contour_set_inplace\n            coordinate_range.py\n              Functions:\n                wrap_180\n                find_coordinate_range\n            ticklabels.py\n              Classes:\n                TickLabels\n              Functions:\n                sort_using\n            frame.py\n              Classes:\n                Spine\n                SpineXAligned\n                BaseFrame\n                RectangularFrame1D\n                RectangularFrame\n                EllipticalFrame\n            ticks.py\n              Classes:\n                Ticks\n            axislabels.py\n              Classes:\n                AxisLabels\n            patches.py\n              Classes:\n                SphericalCircle\n                Quadrangle\n              Functions:\n                _rotate_polygon\n            core.py\n              Classes:\n                _WCSAxesArtist\n                WCSAxes\n                WCSAxesSubplot\n        scripts/\n            fits2bitmap.py\n              Functions:\n                fits2bitmap\n                main\n            __init__.py\n    modeling/\n        tabular.py\n          Classes:\n            _Tabular\n          Functions:\n            tabular_model\n        rotations.py\n          Classes:\n            RotationSequence3D\n            SphericalRotationSequence\n            _EulerRotation\n            EulerAngleRotation\n            _SkyRotation\n            RotateNative2Celestial\n            RotateCelestial2Native\n            Rotation2D\n          Functions:\n            _create_matrix\n            spherical2cartesian\n            cartesian2spherical\n        parameters.py\n          Classes:\n            ParameterError\n            InputParameterError\n            ParameterDefinitionError\n            Parameter\n          Functions:\n            _tofloat\n            _binary_arithmetic_operation\n            _binary_comparison_operation\n            _unary_arithmetic_operation\n            param_repr_oneline\n            wrapper\n            wrapper\n            wrapper\n        math_functions.py\n          Classes:\n            _NPUfuncModel\n          Functions:\n            _make_class_name\n            ufunc_model\n            evaluate\n            evaluate\n        __init__.py\n        utils.py\n          Classes:\n            AliasDict\n            _ConstraintsDict\n            _SpecialOperatorsDict\n          Functions:\n            make_binary_operator_eval\n            poly_map_domain\n            _validate_domain_window\n            comb\n            array_repr_oneline\n            combine_labels\n            ellipse_extent\n            get_inputs_and_params\n            _combine_equivalency_dict\n            _to_radian\n            _to_orig_unit\n        projections.py\n          Classes:\n            _ParameterDS\n            Projection\n            Pix2SkyProjection\n            Sky2PixProjection\n            Zenithal\n            Pix2Sky_ZenithalPerspective\n            Sky2Pix_ZenithalPerspective\n            Pix2Sky_SlantZenithalPerspective\n            Sky2Pix_SlantZenithalPerspective\n            Pix2Sky_Gnomonic\n            Sky2Pix_Gnomonic\n            Pix2Sky_Stereographic\n            Sky2Pix_Stereographic\n            Pix2Sky_SlantOrthographic\n            Sky2Pix_SlantOrthographic\n            Pix2Sky_ZenithalEquidistant\n            Sky2Pix_ZenithalEquidistant\n            Pix2Sky_ZenithalEqualArea\n            Sky2Pix_ZenithalEqualArea\n            Pix2Sky_Airy\n            Sky2Pix_Airy\n            Cylindrical\n            Pix2Sky_CylindricalPerspective\n            Sky2Pix_CylindricalPerspective\n            Pix2Sky_CylindricalEqualArea\n            Sky2Pix_CylindricalEqualArea\n            Pix2Sky_PlateCarree\n            Sky2Pix_PlateCarree\n            Pix2Sky_Mercator\n            Sky2Pix_Mercator\n            PseudoCylindrical\n            Pix2Sky_SansonFlamsteed\n            Sky2Pix_SansonFlamsteed\n            Pix2Sky_Parabolic\n            Sky2Pix_Parabolic\n            Pix2Sky_Molleweide\n            Sky2Pix_Molleweide\n            Pix2Sky_HammerAitoff\n            Sky2Pix_HammerAitoff\n            Conic\n            Pix2Sky_ConicPerspective\n            Sky2Pix_ConicPerspective\n            Pix2Sky_ConicEqualArea\n            Sky2Pix_ConicEqualArea\n            Pix2Sky_ConicEquidistant\n            Sky2Pix_ConicEquidistant\n            Pix2Sky_ConicOrthomorphic\n            Sky2Pix_ConicOrthomorphic\n            PseudoConic\n            Pix2Sky_BonneEqualArea\n            Sky2Pix_BonneEqualArea\n            Pix2Sky_Polyconic\n            Sky2Pix_Polyconic\n            QuadCube\n            Pix2Sky_TangentialSphericalCube\n            Sky2Pix_TangentialSphericalCube\n            Pix2Sky_COBEQuadSphericalCube\n            Sky2Pix_COBEQuadSphericalCube\n            Pix2Sky_QuadSphericalCube\n            Sky2Pix_QuadSphericalCube\n            HEALPix\n            Pix2Sky_HEALPix\n            Sky2Pix_HEALPix\n            Pix2Sky_HEALPixPolar\n            Sky2Pix_HEALPixPolar\n            AffineTransformation2D\n        polynomial.py\n          Classes:\n            PolynomialBase\n            PolynomialModel\n            _PolyDomainWindow1D\n            OrthoPolynomialBase\n            Chebyshev1D\n            Hermite1D\n            Hermite2D\n            Legendre1D\n            Polynomial1D\n            Polynomial2D\n            Chebyshev2D\n            Legendre2D\n            _SIP1D\n            SIP\n            InverseSIP\n        setup_package.py\n        models.py\n        physical_models.py\n          Classes:\n            BlackBody\n            Drude1D\n            Plummer1D\n            NFW\n        powerlaws.py\n          Classes:\n            PowerLaw1D\n            BrokenPowerLaw1D\n            SmoothlyBrokenPowerLaw1D\n            ExponentialCutoffPowerLaw1D\n            LogParabola1D\n        spline.py\n          Classes:\n            _Spline\n            Spline1D\n            _SplineFitter\n            SplineInterpolateFitter\n            SplineSmoothingFitter\n            SplineExactKnotsFitter\n            SplineSplrepFitter\n          Functions:\n            _getter\n            _setter\n        separable.py\n          Functions:\n            is_separable\n            separability_matrix\n            _compute_n_outputs\n            _arith_oper\n            _coord_matrix\n            _cstack\n            _cdot\n            _separable\n            _n_inputs_outputs\n            _n_inputs_outputs\n        convolution.py\n          Classes:\n            Convolution\n        optimizers.py\n          Classes:\n            Optimization\n            SLSQP\n            Simplex\n        core.py\n          Classes:\n            ModelDefinitionError\n            _ModelMeta\n            Model\n            FittableModel\n            Fittable1DModel\n            Fittable2DModel\n            CompoundModel\n          Functions:\n            _model_oper\n            _make_arithmetic_operator\n            _composition_operator\n            _join_operator\n            _add_special_operator\n            _get_submodel_path\n            binary_operation\n            get_ops\n            make_subtree_dict\n            fix_inputs\n            bind_bounding_box\n            bind_compound_bounding_box\n            custom_model\n            _custom_model_inputs\n            _custom_model_wrapper\n            render_model\n            hide_inverse\n            op\n            update_wrapper\n            format_inheritance\n            _keyword2positional\n        functional_models.py\n          Classes:\n            Gaussian1D\n            Gaussian2D\n            Shift\n            Scale\n            Multiply\n            RedshiftScaleFactor\n            Sersic1D\n            _Trigonometric1D\n            Sine1D\n            Cosine1D\n            Tangent1D\n            _InverseTrigonometric1D\n            ArcSine1D\n            ArcCosine1D\n            ArcTangent1D\n            Linear1D\n            Planar2D\n            Lorentz1D\n            Voigt1D\n            Const1D\n            Const2D\n            Ellipse2D\n            Disk2D\n            Ring2D\n            Box1D\n            Box2D\n            Trapezoid1D\n            TrapezoidDisk2D\n            RickerWavelet1D\n            RickerWavelet2D\n            AiryDisk2D\n            Moffat1D\n            Moffat2D\n            Sersic2D\n            KingProjectedAnalytic1D\n            Logarithmic1D\n            Exponential1D\n        statistic.py\n          Functions:\n            leastsquare\n            leastsquare_1d\n            leastsquare_2d\n            leastsquare_3d\n        bounding_box.py\n          Classes:\n            _Interval\n            _BoundingDomain\n            ModelBoundingBox\n            _SelectorArgument\n            _SelectorArguments\n            CompoundBoundingBox\n          Functions:\n            get_index\n            get_name\n        mappings.py\n          Classes:\n            Mapping\n            Identity\n            UnitsMapping\n        fitting.py\n          Classes:\n            Covariance\n            StandardDeviations\n            ModelsError\n            ModelLinearityError\n            UnsupportedConstraintError\n            _FitterMeta\n            Fitter\n            LinearLSQFitter\n            FittingWithOutlierRemoval\n            LevMarLSQFitter\n            SLSQPLSQFitter\n            SimplexLSQFitter\n            JointFitter\n          Functions:\n            fitter_unit_support\n            _convert_input\n            fitter_to_model_params\n            _fitter_to_model_params\n            _model_to_fit_params\n            _validate_constraints\n            _validate_model\n            populate_entry_points\n            _populate_ep\n            wrapper\n    _dev/\n        __init__.py\n        scm_version.py\n    _erfa/\n        __init__.py\n    samp/\n        standard_profile.py\n          Classes:\n            SAMPSimpleXMLRPCRequestHandler\n            ThreadingXMLRPCServer\n        web_profile.py\n          Classes:\n            WebProfileRequestHandler\n            WebProfileXMLRPCServer\n          Functions:\n            web_profile_text_dialog\n        hub_proxy.py\n          Classes:\n            SAMPHubProxy\n        __init__.py\n          Classes:\n            Conf\n        utils.py\n          Classes:\n            _ServerProxyPoolMethod\n            ServerProxyPool\n            SAMPMsgReplierWrapper\n            _HubAsClient\n            _HubAsClientMethod\n          Functions:\n            internet_on\n            getattr_recursive\n            get_num_args\n            wrapped_f\n        integrated_client.py\n          Classes:\n            SAMPIntegratedClient\n        client.py\n          Classes:\n            SAMPClient\n        setup_package.py\n        lockfile_helpers.py\n          Functions:\n            read_lockfile\n            write_lockfile\n            create_lock_file\n            get_main_running_hub\n            get_running_hubs\n            check_running_hub\n            remove_garbage_lock_files\n        hub_script.py\n          Classes:\n            dummy_context\n          Functions:\n            hub_script\n        constants.py\n        hub.py\n          Classes:\n            SAMPHubServer\n            WebProfileDialog\n          Functions:\n            _xmlrpc_call_disconnect\n        errors.py\n          Classes:\n            SAMPWarning\n            SAMPHubError\n            SAMPClientError\n            SAMPProxyError\n    coordinates/\n        attributes.py\n          Classes:\n            Attribute\n            TimeAttribute\n            CartesianRepresentationAttribute\n            QuantityAttribute\n            EarthLocationAttribute\n            CoordinateAttribute\n            DifferentialAttribute\n        sky_coordinate.py\n          Classes:\n            SkyCoordInfo\n            SkyCoord\n          Functions:\n            apply_method\n        solar_system.py\n          Classes:\n            solar_system_ephemeris\n          Functions:\n            _get_kernel\n            _get_body_barycentric_posvel\n            get_body_barycentric_posvel\n            get_body_barycentric\n            _get_apparent_body_position\n            get_body\n            get_moon\n            _apparent_position_in_true_coordinates\n        jparser.py\n          Functions:\n            _sexagesimal\n            search\n            to_ra_dec_angles\n            to_skycoord\n            shorten\n        earth.py\n          Classes:\n            EarthLocationInfo\n            EarthLocation\n            BaseGeodeticRepresentation\n            WGS84GeodeticRepresentation\n            WGS72GeodeticRepresentation\n            GRS80GeodeticRepresentation\n          Functions:\n            _check_ellipsoid\n            _get_json_result\n        orbital_elements.py\n          Functions:\n            calc_moon\n        transformations.py\n          Classes:\n            TransformGraph\n            CoordinateTransform\n            FunctionTransform\n            FunctionTransformWithFiniteDifference\n            BaseAffineTransform\n            AffineTransform\n            StaticMatrixTransform\n            DynamicMatrixTransform\n            CompositeTransform\n          Functions:\n            frame_attrs_from_set\n            frame_comps_from_set\n            _combine_affine_params\n            deco\n            single_transform\n            single_transform\n        calculation.py\n          Classes:\n            HumanError\n            CelestialError\n          Functions:\n            get_sign\n            _get_zodiac\n            horoscope\n            inject_horoscope\n        angle_formats.py\n          Classes:\n            _AngleParser\n          Functions:\n            _check_hour_range\n            _check_minute_range\n            _check_second_range\n            check_hms_ranges\n            parse_angle\n            degrees_to_dms\n            dms_to_degrees\n            hms_to_hours\n            hms_to_degrees\n            hms_to_radians\n            hms_to_dms\n            hours_to_decimal\n            hours_to_radians\n            hours_to_hms\n            radians_to_degrees\n            radians_to_hours\n            radians_to_hms\n            radians_to_dms\n            sexagesimal_to_string\n            hours_to_string\n            degrees_to_string\n            t_UFLOAT\n            t_UINT\n            t_SIGN\n            t_EASTWEST\n            t_NORTHSOUTH\n            t_SIMPLE_UNIT\n            t_error\n            p_angle\n            p_sign\n            p_eastwest\n            p_dir\n            p_ufloat\n            p_colon\n            p_spaced\n            p_generic\n            p_hms\n            p_dms\n            p_simple\n            p_arcsecond\n            p_arcminute\n            p_error\n        spectral_quantity.py\n          Classes:\n            SpectralQuantity\n        earth_orientation.py\n          Functions:\n            eccentricity\n            mean_lon_of_perigee\n            obliquity\n            precession_matrix_Capitaine\n            _precess_from_J2000_Capitaine\n            _precession_matrix_besselian\n            _load_nutation_data\n            nutation_components2000B\n            nutation_matrix\n        __init__.py\n        erfa_astrom.py\n          Classes:\n            ErfaAstrom\n            ErfaAstromInterpolator\n            erfa_astrom\n        matching.py\n          Functions:\n            match_coordinates_3d\n            match_coordinates_sky\n            search_around_3d\n            search_around_sky\n            _get_cartesian_kdtree\n        sky_coordinate_parsers.py\n          Functions:\n            _get_frame_class\n            _get_frame_without_data\n            _parse_coordinate_data\n            _get_representation_component_units\n            _parse_coordinate_arg\n            _get_representation_attrs\n            _parse_ra_dec\n        spectral_coordinate.py\n          Classes:\n            NoVelocityWarning\n            NoDistanceWarning\n            SpectralCoord\n          Functions:\n            _apply_relativistic_doppler_shift\n            update_differentials_to_match\n            attach_zero_velocities\n            _get_velocities\n        matrix_utilities.py\n          Functions:\n            matrix_product\n            matrix_transpose\n            rotation_matrix\n            angle_axis\n            is_O3\n            is_rotation\n        distances.py\n          Classes:\n            Distance\n        funcs.py\n          Functions:\n            cartesian_to_spherical\n            spherical_to_cartesian\n            get_sun\n            get_constellation\n            _concatenate_components\n            concatenate_representations\n            concatenate\n        sites.py\n          Classes:\n            SiteRegistry\n          Functions:\n            get_builtin_sites\n            get_downloaded_sites\n        angle_lextab.py\n        name_resolve.py\n          Classes:\n            sesame_url\n            sesame_database\n            NameResolveError\n          Functions:\n            _parse_response\n            get_icrs_coordinates\n        angle_parsetab.py\n        angles.py\n          Classes:\n            Angle\n            Latitude\n            LongitudeInfo\n            Longitude\n          Functions:\n            _no_angle_subclass\n            do_format\n            formatter\n            plain_unit_format\n            plain_unit_format\n        angle_utilities.py\n          Functions:\n            angular_separation\n            position_angle\n            offset_by\n            golden_spiral_grid\n            uniform_spherical_random_surface\n            uniform_spherical_random_volume\n        representation.py\n          Classes:\n            BaseRepresentationOrDifferentialInfo\n            BaseRepresentationOrDifferential\n            RepresentationInfo\n            BaseRepresentation\n            CartesianRepresentation\n            UnitSphericalRepresentation\n            RadialRepresentation\n            SphericalRepresentation\n            PhysicsSphericalRepresentation\n            CylindricalRepresentation\n            BaseDifferential\n            CartesianDifferential\n            BaseSphericalDifferential\n            UnitSphericalDifferential\n            SphericalDifferential\n            BaseSphericalCosLatDifferential\n            UnitSphericalCosLatDifferential\n            SphericalCosLatDifferential\n            RadialDifferential\n            PhysicsSphericalDifferential\n            CylindricalDifferential\n          Functions:\n            _fqn_class\n            get_reprdiff_cls_hash\n            _invalidate_reprdiff_cls_hash\n            _array2string\n            _make_getter\n            _spherical_op_funcs\n            get_component\n        baseframe.py\n          Classes:\n            RepresentationMapping\n            BaseCoordinateFrame\n            GenericFrame\n          Functions:\n            _get_repr_cls\n            _get_diff_cls\n            _get_repr_classes\n            getter\n            apply_method\n        errors.py\n          Classes:\n            RangeError\n            BoundsError\n            IllegalHourError\n            IllegalHourWarning\n            IllegalMinuteError\n            IllegalMinuteWarning\n            IllegalSecondError\n            IllegalSecondWarning\n            UnitsError\n            ConvertError\n            UnknownSiteException\n        builtin_frames/\n            icrs_observed_transforms.py\n              Functions:\n                icrs_to_observed\n                observed_to_icrs\n            icrs_fk5_transforms.py\n              Functions:\n                _icrs_to_fk5_matrix\n                icrs_to_fk5\n                fk5_to_icrs\n            lsr.py\n              Classes:\n                LSR\n                GalacticLSR\n                LSRK\n                LSRD\n              Functions:\n                icrs_to_lsr\n                lsr_to_icrs\n                galactic_to_galacticlsr\n                galacticlsr_to_galactic\n                icrs_to_lsrk\n                lsrk_to_icrs\n                icrs_to_lsrd\n                lsrd_to_icrs\n            galactocentric.py\n              Classes:\n                _StateProxy\n                galactocentric_frame_defaults\n                Galactocentric\n              Functions:\n                get_matrix_vectors\n                _check_coord_repr_diff_types\n                icrs_to_galactocentric\n                galactocentric_to_icrs\n            supergalactic.py\n              Classes:\n                Supergalactic\n            hcrs.py\n              Classes:\n                HCRS\n            cirs.py\n              Classes:\n                CIRS\n            itrs.py\n              Classes:\n                ITRS\n            gcrs.py\n              Classes:\n                GCRS\n                PrecessedGeocentric\n            baseradec.py\n              Classes:\n                BaseRADecFrame\n            galactic_transforms.py\n              Functions:\n                fk5_to_gal\n                _gal_to_fk5\n                fk4_to_gal\n                gal_to_fk4\n            ecliptic.py\n              Classes:\n                BaseEclipticFrame\n                GeocentricMeanEcliptic\n                GeocentricTrueEcliptic\n                BarycentricMeanEcliptic\n                BarycentricTrueEcliptic\n                HeliocentricMeanEcliptic\n                HeliocentricTrueEcliptic\n                HeliocentricEclipticIAU76\n                CustomBarycentricEcliptic\n            altaz.py\n              Classes:\n                AltAz\n            icrs.py\n              Classes:\n                ICRS\n            equatorial.py\n              Classes:\n                TETE\n                TEME\n            icrs_cirs_transforms.py\n              Functions:\n                icrs_to_cirs\n                cirs_to_icrs\n                icrs_to_gcrs\n                gcrs_to_icrs\n                gcrs_to_hcrs\n                hcrs_to_icrs\n                icrs_to_hcrs\n            __init__.py\n              Functions:\n                make_transform_graph_docs\n            fk5.py\n              Classes:\n                FK5\n              Functions:\n                fk5_to_fk5\n            utils.py\n              Functions:\n                get_polar_motion\n                _warn_iers\n                get_dut1utc\n                get_jd12\n                norm\n                pav2pv\n                get_cip\n                aticq\n                atciqz\n                prepare_earth_position_vel\n                get_offset_sun_from_barycenter\n            intermediate_rotation_transforms.py\n              Functions:\n                teme_to_itrs_mat\n                gcrs_to_cirs_mat\n                cirs_to_itrs_mat\n                tete_to_itrs_mat\n                gcrs_precession_mat\n                get_location_gcrs\n                gcrs_to_tete\n                tete_to_gcrs\n                tete_to_itrs\n                itrs_to_tete\n                gcrs_to_cirs\n                cirs_to_gcrs\n                cirs_to_itrs\n                itrs_to_cirs\n                gcrs_to_precessedgeo\n                precessedgeo_to_gcrs\n                teme_to_itrs\n                itrs_to_teme\n            cirs_observed_transforms.py\n              Functions:\n                cirs_to_observed\n                observed_to_cirs\n            ecliptic_transforms.py\n              Functions:\n                _mean_ecliptic_rotation_matrix\n                _true_ecliptic_rotation_matrix\n                _obliquity_only_rotation_matrix\n                gcrs_to_geoecliptic\n                geoecliptic_to_gcrs\n                icrs_to_baryecliptic\n                baryecliptic_to_icrs\n                icrs_to_helioecliptic\n                helioecliptic_to_icrs\n                gcrs_to_true_geoecliptic\n                true_geoecliptic_to_gcrs\n                icrs_to_true_baryecliptic\n                true_baryecliptic_to_icrs\n                icrs_to_true_helioecliptic\n                true_helioecliptic_to_icrs\n                ecliptic_to_iau76_icrs\n                icrs_to_iau76_ecliptic\n                icrs_to_custombaryecliptic\n                custombaryecliptic_to_icrs\n            skyoffset.py\n              Classes:\n                SkyOffsetFrame\n              Functions:\n                make_skyoffset_cls\n                skyoffset_to_skyoffset\n                reference_to_skyoffset\n                skyoffset_to_reference\n            fk4.py\n              Classes:\n                FK4\n                FK4NoETerms\n              Functions:\n                fk4_to_fk4\n                fk4noe_to_fk4noe\n                fk4_e_terms\n                fk4_to_fk4_no_e\n                fk4_no_e_to_fk4\n            fk4_fk5_transforms.py\n              Functions:\n                _fk4_B_matrix\n                fk4_no_e_to_fk5\n                fk5_to_fk4_no_e\n            supergalactic_transforms.py\n              Functions:\n                gal_to_supergal\n                supergal_to_gal\n            galactic.py\n              Classes:\n                Galactic\n            hadec.py\n              Classes:\n                HADec\n    utils/\n        data_info.py\n          Classes:\n            InfoAttribute\n            ParentAttribute\n            DataInfoMeta\n            DataInfo\n            BaseColumnInfo\n            MixinInfo\n            ParentDtypeInfo\n          Functions:\n            serialize_context_as\n            dtype_info_name\n            data_info_factory\n            _get_obj_attrs_map\n            _get_data_attribute\n            func\n            warn_str_func\n            getattrs\n        data.py\n          Classes:\n            _NonClosingBufferedReader\n            _NonClosingTextIOWrapper\n            Conf\n            CacheMissingWarning\n            _ftptlswrapper\n            _FTPTLSHandler\n            ReadOnlyDict\n            CacheDamaged\n          Functions:\n            is_url\n            _is_inside\n            get_readable_fileobj\n            get_file_contents\n            get_pkg_data_fileobj\n            get_pkg_data_filename\n            get_pkg_data_contents\n            get_pkg_data_filenames\n            get_pkg_data_fileobjs\n            compute_hash\n            get_pkg_data_path\n            _find_hash_fn\n            get_free_space_in_dir\n            check_free_space_in_dir\n            _build_urlopener\n            _try_url_open\n            _download_file_from_source\n            download_file\n            is_url_in_cache\n            cache_total_size\n            _do_download_files_in_parallel\n            download_files_in_parallel\n            _deltemps\n            clear_download_cache\n            _get_download_cache_loc\n            _url_to_dirname\n            check_download_cache\n            _SafeTemporaryDirectory\n            _rmtree\n            import_file_to_cache\n            get_cached_urls\n            cache_contents\n            export_download_cache\n            import_download_cache\n        diff.py\n          Functions:\n            diff_values\n            report_diff_values\n            where_not_allclose\n        introspection.py\n          Functions:\n            resolve_name\n            minversion\n            find_current_module\n            _get_module_from_frame\n            find_mod_objs\n            isinstancemethod\n            _isinstancemethod\n            packages_distributions\n        misc.py\n          Classes:\n            _DummyFile\n            NumpyRNGContext\n            JsonCustomEncoder\n            OrderedDescriptor\n            OrderedDescriptorContainer\n          Functions:\n            isiterable\n            indent\n            silence\n            format_exception\n            find_api_page\n            signal_number_to_name\n            is_path_hidden\n            walk_skip_hidden\n            strip_accents\n            did_you_mean\n            _set_locale\n            dtype_bytes_or_chars\n            _hungry_for\n            pizza\n            coffee\n            _has_hidden_attribute\n            _has_hidden_attribute\n        argparse.py\n          Functions:\n            directory\n            readable_directory\n            writeable_directory\n        metadata.py\n          Classes:\n            MergeConflictError\n            MergeConflictWarning\n            MergeStrategyMeta\n            MergeStrategy\n            MergePlus\n            MergeNpConcatenate\n            _EnableMergeStrategies\n            MetaData\n            MetaAttribute\n          Functions:\n            common_dtype\n            _both_isinstance\n            _not_equal\n            enable_merge_strategies\n            _warn_str_func\n            _error_str_func\n            dtype\n        __init__.py\n        parsing.py\n          Classes:\n            ThreadSafeParser\n          Functions:\n            _add_tab_header\n            _patch_get_caller_module_dict\n            lex\n            yacc\n            wrapper\n        codegen.py\n          Functions:\n            make_function_with_signature\n        exceptions.py\n          Classes:\n            AstropyWarning\n            AstropyUserWarning\n            AstropyDeprecationWarning\n            AstropyPendingDeprecationWarning\n            AstropyBackwardsIncompatibleChangeWarning\n            DuplicateRepresentationWarning\n            _NoValue\n        setup_package.py\n          Functions:\n            get_extensions\n        shapes.py\n          Classes:\n            NDArrayShapeMethods\n            ShapedLikeNDArray\n            IncompatibleShapeError\n          Functions:\n            check_broadcast\n            unbroadcast\n            self_iter\n        collections.py\n          Classes:\n            HomogeneousList\n        decorators.py\n          Classes:\n            classproperty\n            lazyproperty\n            sharedmethod\n          Functions:\n            deprecated\n            deprecated_attribute\n            deprecated_renamed_argument\n            format_doc\n            deprecate_doc\n            get_function\n            deprecate_function\n            deprecate_class\n            deprecate\n            get\n            set\n            delete\n            decorator\n            set_docstring\n            deprecated_func\n            wrapper\n            fget\n            wrapper\n        state.py\n          Classes:\n            ScienceState\n            _Context\n        console.py\n          Classes:\n            _IPython\n            _mapfunc\n            ProgressBar\n            Spinner\n            ProgressBarOrSpinner\n            Getch\n            _GetchUnix\n            _GetchWindows\n            _GetchMacCarbon\n          Functions:\n            _get_stdout\n            isatty\n            terminal_size\n            _color_text\n            _decode_preferred_encoding\n            _write_with_fallback\n            color_print\n            strip_ansi_codes\n            human_time\n            human_file_size\n            print_code_line\n        masked/\n            function_helpers.py\n              Classes:\n                MaskedFormat\n              Functions:\n                _get_data_and_masks\n                datetime_as_string\n                sinc\n                iscomplex\n                unwrap\n                nan_to_num\n                masked_a_helper\n                masked_m_helper\n                masked_v_helper\n                masked_arr_helper\n                broadcast_to\n                outer\n                empty_like\n                zeros_like\n                ones_like\n                full_like\n                put\n                putmask\n                place\n                copyto\n                packbits\n                unpackbits\n                bincount\n                msort\n                sort_complex\n                concatenate\n                append\n                block\n                broadcast_arrays\n                insert\n                _masked_median_1d\n                _masked_median\n                median\n                _masked_quantile_1d\n                _masked_quantile\n                quantile\n                percentile\n                array_equal\n                array_equiv\n                where\n                choose\n                select\n                piecewise\n                interp\n                lexsort\n                apply_over_axes\n                _array2string\n                array2string\n                array_str\n                masked_nanfunc\n                count_nonzero\n                count_nonzero\n                _zeros_like\n                nanfunc\n            __init__.py\n            core.py\n              Classes:\n                Masked\n                MaskedInfoBase\n                MaskedNDArrayInfo\n                MaskedArraySubclassInfo\n                MaskedIterator\n                MaskedNDArray\n                MaskedRecarray\n              Functions:\n                _comparison_method\n                _compare\n        xml/\n            writer.py\n              Classes:\n                XMLWriter\n              Functions:\n                xml_escape_cdata\n                xml_escape\n            iterparser.py\n              Functions:\n                _convert_to_fd_or_read_function\n                _fast_iterparse\n                get_xml_iterator\n                get_xml_encoding\n                xml_readlines\n                start\n                end\n            check.py\n              Functions:\n                check_id\n                fix_id\n                check_token\n                check_mime_content_type\n                check_anyuri\n            __init__.py\n            setup_package.py\n              Functions:\n                get_extensions\n            validate.py\n              Functions:\n                validate_schema\n            unescaper.py\n              Functions:\n                unescape_all\n                _unescape_str\n                _unescape_bytes\n        compat/\n            misc.py\n              Functions:\n                possible_filename\n                override__dir__\n                namedtuple_asdict\n                override__dir__wrapper\n            __init__.py\n            optional_deps.py\n              Functions:\n                __getattr__\n            numpycompat.py\n        iers/\n            __init__.py\n            iers.py\n              Classes:\n                IERSStaleWarning\n                Conf\n                IERSRangeError\n                IERS\n                IERS_A\n                IERS_B\n                IERS_Auto\n                earth_orientation_table\n                LeapSeconds\n              Functions:\n                download_file\n                _none_to_float\n    stats/\n        circstats.py\n          Functions:\n            _components\n            _angle\n            _length\n            circmean\n            circvar\n            circstd\n            circmoment\n            circcorrcoef\n            rayleightest\n            vtest\n            _A1inv\n            vonmisesmle\n        __init__.py\n        jackknife.py\n          Functions:\n            jackknife_resampling\n            jackknife_stats\n        histogram.py\n          Classes:\n            _KnuthF\n          Functions:\n            calculate_bin_edges\n            histogram\n            scott_bin_width\n            freedman_bin_width\n            knuth_bin_width\n        setup_package.py\n          Functions:\n            get_extensions\n        funcs.py\n          Functions:\n            _expand_dims\n            binom_conf_interval\n            binned_binom_proportion\n            _check_poisson_conf_inputs\n            poisson_conf_interval\n            median_absolute_deviation\n            mad_std\n            signal_to_noise_oir_ccd\n            bootstrap\n            _scipy_kraft_burrows_nousek\n            _mpmath_kraft_burrows_nousek\n            _kraft_burrows_nousek\n            kuiper_false_positive_probability\n            kuiper\n            kuiper_two\n            fold_intervals\n            cdf_from_intervals\n            interval_overlap_length\n            histogram_intervals\n            eqn8\n            eqn7\n            eqn9_left\n            find_s_min\n            func\n            eqn8\n            eqn7\n            eqn9_left\n            find_s_min\n            func\n            eqn7NB\n            eqn7ysmax\n        bayesian_blocks.py\n          Classes:\n            FitnessFunc\n            Events\n            RegularEvents\n            PointMeasures\n          Functions:\n            bayesian_blocks\n        biweight.py\n          Functions:\n            _stat_functions\n            biweight_location\n            biweight_scale\n            biweight_midvariance\n            biweight_midcovariance\n            biweight_midcorrelation\n        info_theory.py\n          Functions:\n            bayesian_info_criterion\n            bayesian_info_criterion_lsq\n            akaike_info_criterion\n            akaike_info_criterion_lsq\n        sigma_clipping.py\n          Classes:\n            SigmaClip\n          Functions:\n            _move_tuple_axes_first\n            _nanmean\n            _nanmedian\n            _nanstd\n            _nanmadstd\n            sigma_clip\n            sigma_clipped_stats\n        spatial.py\n          Classes:\n            RipleysKEstimator\n        lombscargle/\n            __init__.py\n              Classes:\n                LombScargle\n        bls/\n            __init__.py\n              Classes:\n                BoxLeastSquares\n                BoxLeastSquaresResults\n    extern/\n        __init__.py\n        _strptime.py\n          Classes:\n            LocaleTime\n            TimeRE\n          Functions:\n            _getlang\n            _calc_julian_from_U_or_W\n            _strptime\n            _strptime_time\n            _strptime_datetime\n        configobj/\n            __init__.py\n            validate.py\n              Classes:\n                ValidateError\n                VdtMissingValue\n                VdtUnknownCheckError\n                VdtParamError\n                VdtTypeError\n                VdtValueError\n                VdtValueTooSmallError\n                VdtValueTooBigError\n                VdtValueTooShortError\n                VdtValueTooLongError\n                Validator\n              Functions:\n                dottedQuadToNum\n                numToDottedQuad\n                _is_num_param\n                is_integer\n                is_float\n                is_boolean\n                is_ip_addr\n                is_list\n                is_tuple\n                is_string\n                is_int_list\n                is_bool_list\n                is_float_list\n                is_string_list\n                is_ip_addr_list\n                force_list\n                is_mixed_list\n                is_option\n                _test\n                _test2\n                _test3\n                bool\n            configobj.py\n              Classes:\n                UnknownType\n                Builder\n                ConfigObjError\n                NestingError\n                ParseError\n                ReloadError\n                DuplicateError\n                ConfigspecError\n                InterpolationError\n                InterpolationLoopError\n                RepeatSectionError\n                MissingInterpolationOption\n                UnreprError\n                InterpolationEngine\n                ConfigParserInterpolation\n                TemplateInterpolation\n                Section\n                ConfigObj\n                SimpleVal\n              Functions:\n                match_utf8\n                getObj\n                unrepr\n                __newobj__\n                flatten_errors\n                get_extra_values\n                recursive_interpolate\n                _getval\n                _getval\n                validate_entry\n                _check\n                set_section\n        jquery/\n            __init__.py\n        ply/\n            ctokens.py\n              Functions:\n                t_COMMENT\n                t_CPPCOMMENT\n            yacc.py\n              Classes:\n                PlyLogger\n                NullLogger\n                YaccError\n                YaccSymbol\n                YaccProduction\n                LRParser\n                Production\n                MiniProduction\n                LRItem\n                GrammarError\n                Grammar\n                VersionError\n                LRTable\n                LALRError\n                LRGeneratedTable\n                ParserReflect\n              Functions:\n                format_result\n                format_stack_entry\n                errok\n                restart\n                token\n                call_errorfunc\n                rightmost_terminal\n                digraph\n                traverse\n                get_caller_module_dict\n                parse_grammar\n                yacc\n                mark_reachable_from\n            ygen.py\n              Functions:\n                get_source_range\n                filter_section\n                main\n            __init__.py\n            lex.py\n              Classes:\n                LexError\n                LexToken\n                PlyLogger\n                NullLogger\n                Lexer\n                LexerReflect\n              Functions:\n                _get_regex\n                get_caller_module_dict\n                _funcs_to_names\n                _names_to_funcs\n                _form_master_re\n                _statetoken\n                lex\n                runmain\n                TOKEN\n                set_regex\n            cpp.py\n              Classes:\n                Macro\n                Preprocessor\n              Functions:\n                t_CPP_WS\n                CPP_INTEGER\n                t_CPP_STRING\n                t_CPP_CHAR\n                t_CPP_COMMENT1\n                t_CPP_COMMENT2\n                t_error\n                trigraph\n    table/\n        sorted_array.py\n          Classes:\n            SortedArray\n          Functions:\n            _searchsorted\n        serialize.py\n          Classes:\n            SerializedColumn\n            _TableLite\n          Functions:\n            _represent_mixin_as_column\n            represent_mixins_as_columns\n            _construct_mixin_from_obj_attrs_and_info\n            _construct_mixin_from_columns\n            _construct_mixins_from_columns\n        info.py\n          Classes:\n            TableInfo\n          Functions:\n            table_info\n            serialize_method_as\n            get_override_sm\n        ndarray_mixin.py\n          Classes:\n            NdarrayMixinInfo\n            NdarrayMixin\n        np_utils.py\n          Classes:\n            TableMergeError\n          Functions:\n            get_col_name_map\n            get_descrs\n            common_dtype\n            _check_for_sequence_of_structured_arrays\n        pprint.py\n          Classes:\n            TableFormatter\n          Functions:\n            default_format_func\n            _use_str_for_masked_values\n            _possible_string_format_functions\n            get_auto_format_func\n            _get_pprint_include_names\n            _auto_format_func\n            get_matches\n            format_col_str\n            outwidth\n        groups.py\n          Classes:\n            BaseGroups\n            ColumnGroups\n            TableGroups\n          Functions:\n            table_group_by\n            _table_group_by\n            column_group_by\n        __init__.py\n          Classes:\n            Conf\n        operations.py\n          Functions:\n            _merge_table_meta\n            _get_list_of_tables\n            _get_out_class\n            join_skycoord\n            join_distance\n            join\n            setdiff\n            dstack\n            vstack\n            hstack\n            unique\n            get_col_name_map\n            get_descrs\n            common_dtype\n            _get_join_sort_idxs\n            _apply_join_funcs\n            _join\n            _join_keys_left_right\n            _check_join_type\n            _vstack\n            _hstack\n            join_func\n            join_func\n            _keys_to_cols\n        column.py\n          Classes:\n            StringTruncateWarning\n            FalseArray\n            ColumnInfo\n            BaseColumn\n            Column\n            MaskedColumnInfo\n            MaskedColumn\n          Functions:\n            _auto_names\n            col_copy\n            _expand_string_array_for_values\n            _convert_sequence_data_to_array\n            _make_compare\n            _compare\n        table.py\n          Classes:\n            TableReplaceWarning\n            TableColumns\n            TableAttribute\n            PprintIncludeExclude\n            Table\n            QTable\n            _Context\n          Functions:\n            descr\n            has_info_class\n            _get_names_from_list_of_dict\n            _encode_mixins\n        row.py\n          Classes:\n            Row\n        setup_package.py\n          Functions:\n            get_extensions\n        pandas.py\n          Classes:\n            HTMLWithBackup\n        meta.py\n          Classes:\n            ColumnOrderList\n            ColumnDict\n            YamlParseError\n            ConvertError\n            TableDumper\n            TableLoader\n          Functions:\n            _construct_odict\n            _repr_pairs\n            _repr_odict\n            _repr_column_dict\n            _get_variable_length_array_shape\n            _get_datatype_from_dtype\n            _get_col_attributes\n            get_yaml_from_table\n            get_yaml_from_header\n            get_header_from_yaml\n        connect.py\n          Classes:\n            TableRead\n            TableWrite\n        jsviewer.py\n          Classes:\n            Conf\n            JSViewer\n          Functions:\n            write_table_jsviewer\n        soco.py\n          Classes:\n            Node\n            SCEngine\n        table_helpers.py\n          Classes:\n            TimingTables\n            ArrayWrapperInfo\n            ArrayWrapper\n          Functions:\n            simple_table\n            complex_table\n        index.py\n          Classes:\n            QueryError\n            Index\n            SlicedIndex\n            _IndexModeContext\n            TableIndices\n            TableLoc\n            TableLocIndices\n            TableILoc\n          Functions:\n            get_index\n            get_index_by_names\n        bst.py\n          Classes:\n            MaxValue\n            MinValue\n            Epsilon\n            Node\n            BST\n        scripts/\n            __init__.py\n            showtable.py\n              Functions:\n                showtable\n                main\n        mixins/\n            __init__.py\n            registry.py\n              Classes:\n                MixinRegistryError\n              Functions:\n                register_mixin_handler\n                get_mixin_handler\n                dask_handler\n            dask.py\n              Classes:\n                DaskInfo\n                DaskColumn\n              Functions:\n                as_dask_column\n    config/\n        paths.py\n          Classes:\n            _SetTempPath\n            set_temp_config\n            set_temp_cache\n          Functions:\n            _find_home\n            get_config_dir\n            get_cache_dir\n            _find_or_create_root_dir\n            wrapper\n        configuration.py\n          Classes:\n            InvalidConfigurationItemWarning\n            ConfigurationMissingWarning\n            ConfigurationDefaultMissingError\n            ConfigurationDefaultMissingWarning\n            ConfigurationChangedWarning\n            _ConfigNamespaceMeta\n            ConfigNamespace\n            ConfigItem\n          Functions:\n            get_config_filename\n            get_config\n            generate_config\n            reload_config\n            is_unedited_config_file\n            update_default_config\n            create_config_file\n            section_name\n        __init__.py\n        affiliated.py\ndocs/\n    conf.py\n      Functions:\n        rstjinja\n        resolve_astropy_and_dev_reference\n        setup\n    conftest.py\n      Functions:\n        _docdir\n    nddata/\n        examples/\n            cutout2d_tofits.py\n              Functions:\n                download_image_save_cutout\n    wcs/\n        examples/\n            cube_wcs.py\n            programmatic.py\n            from_file.py\n              Functions:\n                load_wcs_from_file\nexamples/\n    io/\n        plot_fits-image.py\n        fits-tables.py\n        skip_create-large-fits.py\n        modify-fits-header.py\n        create-mef.py\n        split-jpeg-to-fits.py\n    coordinates/\n        plot_obs-planning.py\n        rv-to-gsr.py\n          Functions:\n            rv_to_gsr\n        plot_galactocentric-frame.py\n        plot_sgr-coordinate-frame.py\n          Classes:\n            Sagittarius\n          Functions:\n            galactic_to_sgr\n            sgr_to_galactic\n    template/\n        example-template.py\n          Functions:\n            dummy\n.pyinstaller\n\n###\n\nPlease provide the complete set of locations as either a class name, a function name, or a variable name.\nNote that if you include a class, you do not need to list its specific methods.\nYou can include either the entire class or don't include the class name and instead include specific methods in the class.\n### Examples:\n```\nfull_path1/file1.py\nfunction: my_function_1\nclass: MyClass1\nfunction: MyClass2.my_method\n\nfull_path2/file2.py\nvariable: my_var\nfunction: MyClass3.my_method\n\nfull_path3/file3.py\nfunction: my_function_2\nfunction: my_function_3\nfunction: MyClass4.my_method_1\nclass: MyClass5\n```\n\nReturn just the locations.", "num_tokens of the message": 21176}
